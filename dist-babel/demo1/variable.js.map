{"version":3,"sources":["../../src/demo1/variable.js"],"names":[],"mappings":"AAAA;;;;;;;;;;AAOA,IAAI,IAAI,GAAR;AAAA,IAAY,IAAI,GAAhB;WACQ,CAAC,CAAD,EAAG,CAAH,C;AAAP,C;AAAE,C;;AACH,QAAQ,GAAR,CAAY,CAAZ,EAAc,CAAd,E;;;AAIA,SAAS,GAAT,GAAc;AACb,KAAI,QAAQ,OAAZ;AACA,KAAI,MAAM,GAAV;;AAEA,QAAO,CAAC,KAAD,EAAO,GAAP,CAAP;AACA;;WACiB,K;;;;IAAb,K;IAAM,G;;AACX,QAAQ,GAAR,CAAY,KAAZ,EAAkB,GAAlB,E;;AAEA,SAAS,GAAT,GAAc;AACb,KAAI,MAAM;AACT,UAAS,OADA;AAET,QAAO;AAFE,EAAV;;AAKA,QAAO,GAAP;AACA;;WACmB,K;;IAAf,M,QAAA,M;IAAO,I,QAAA,I;;AACZ,QAAQ,GAAR,CAAY,MAAZ,EAAmB,IAAnB,E;;;;;AAMA,SAAS,EAAT,QAAuB;AAAA;;AAAA,KAAV,CAAU;AAAA,KAAP,CAAO;AAAA,KAAJ,CAAI;;AACtB,SAAQ,GAAR,CAAY,CAAZ,EAAc,CAAd,EAAgB,CAAhB,E;AACA;AACD,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAH;;;AAGA,SAAS,EAAT,QAAuB;AAAA,KAAV,CAAU,SAAV,CAAU;AAAA,KAAP,CAAO,SAAP,CAAO;AAAA,KAAJ,CAAI,SAAJ,CAAI;;AACtB,SAAQ,GAAR,CAAY,CAAZ,EAAc,CAAd,EAAgB,CAAhB,E;AACA;AACD,GAAG,EAAC,GAAG,CAAJ,EAAO,GAAG,CAAV,EAAa,GAAG,CAAhB,EAAH;;;AAIA,IAAI,WAAW;AACb,KAAI,EADS;AAEb,SAAQ,IAFK;AAGb,OAAM,CAAC,GAAD,EAAM,IAAN;AAHO,CAAf;;IAMM,E,GAA8B,Q,CAA9B,E;IAAI,M,GAA0B,Q,CAA1B,M;IAAe,M,GAAW,Q,CAAlB,I;;;AAElB,QAAQ,GAAR,CAAY,EAAZ,EAAgB,MAAhB,EAAwB,MAAxB,E;;;;AAKA,OAAO,IAAP,GAAc,UAAU,GAAV;;AAQX;;;AAAA,yBAPD,KAOC;AAAA,KAPD,KAOC,+BAPO,IAOP;AAAA,8BAND,UAMC;AAAA,KAND,UAMC,oCANY,YAAY,CAAE,CAM1B;AAAA,yBALD,KAKC;AAAA,KALD,KAKC,+BALO,IAKP;AAAA,4BAJD,QAIC;AAAA,KAJD,QAIC,kCAJU,YAAY,CAAE,CAIxB;AAAA,+BAHD,WAGC;AAAA,KAHD,WAGC,qCAHa,KAGb;AAAA,0BAFD,MAEC;AAAA,KAFD,MAEC,gCAFQ,IAER;AAEF,CAVD;;;;AAeA,IAAI,KAAK,IAAI,GAAJ,EAAT;AACA,GAAG,GAAH,CAAO,OAAP,EAAe,OAAf;AACA,GAAG,GAAH,CAAO,QAAP,EAAgB,OAAhB;;;;;;AACA,sBAAuB,EAAvB,8HAA0B;AAAA;;AAAA,MAAjB,GAAiB;AAAA,MAAb,KAAa;;AACzB,UAAQ,GAAR,CAAY,GAAZ,EAAgB,KAAhB;;AAEA;;;;;;;;;;;;;;;;AACD,QAAQ,GAAR,CAAY,+BAAZ;;;;;;AACA,uBAAiB,EAAjB,mIAAoB;AAAA;;AAAA,MAAX,GAAW;;AACnB,UAAQ,GAAR,CAAY,GAAZ;AACA;;;;;;;;;;;;;;;;AACD,QAAQ,GAAR,CAAY,iCAAZ;;;;;;AACA,uBAAoB,EAApB,mIAAuB;AAAA;;AAAA,MAAb,KAAa;;AACtB,UAAQ,GAAR,CAAY,KAAZ;AACA;;;;;;;;;;;;;;;;;;;eAKyC,QAAQ,YAAR,C;;IAAlC,iB,YAAA,iB;IAAmB,U,YAAA,U","file":"variable.js","sourcesContent":["'use strict'\r\n\r\n/**\r\n\t变量解构赋值的用途\r\n**/\r\n\r\n// 用途一：交换变量的值\r\nvar x = \"x\",y = \"y\";\r\n[x,y] = [y,x];\r\nconsole.log(x,y); // \"y\" \"x\"\r\n\r\n\r\n// 用途二：从函数返回多个值\r\nfunction cat(){\r\n\tlet color = \"black\";\r\n\tlet len = 0.5;\r\n\r\n\treturn [color,len];\r\n}\r\nlet [color,len] = cat();\r\nconsole.log(color,len); // black 0.5\r\n\r\nfunction dog(){\r\n\tlet obj = {\r\n\t\tcolor2 : \"white\",\r\n\t\tlen2 : 1\r\n\t}\r\n\r\n\treturn obj;\r\n}\r\nlet {color2,len2} = dog();\r\nconsole.log(color2,len2); // white 1\r\n\r\n\r\n// 用途三：函数参数的定义\r\n// 方便地将一组参数与变量名对应起来。\r\n// 参数是一组有次序的值\r\nfunction f1([x, y, z]) {\r\n\tconsole.log(x,y,z);\t// 1,2,3\r\n}\r\nf1([1, 2, 3]);\r\n\r\n// 参数是一组无次序的值\r\nfunction f2({x, y, z}) { \r\n\tconsole.log(x,y,z);\t// 1,2,3\r\n}\r\nf2({z: 3, y: 2, x: 1});\r\n\r\n\r\n// 用途四：提取JSON数据\r\nvar jsonData = {\r\n  id: 42,\r\n  status: \"OK\",\r\n  data: [867, 5309]\r\n};\r\n\r\nlet { id, status, data : number } = jsonData;\r\n\r\nconsole.log(id, status, number); // 42, 'OK', [867, 5309]\r\n\r\n\r\n// 用途五：指定函数参数的默认值\r\n// 这样可以避免在函数体中出现 var foo = config.foo || 'default foo';这样的语句。\r\njQuery.ajax = function (url, {\r\n  async = true,\r\n  beforeSend = function () {},\r\n  cache = true,\r\n  complete = function () {},\r\n  crossDomain = false,\r\n  global = true,\r\n  // ... more config\r\n}) {\r\n  // ... do stuff\r\n};\r\n\r\n\r\n// 用途六：遍历Map结构\r\n// 需要用到 for...of 来遍历\r\nvar mp = new Map();\r\nmp.set('first','hello');\r\nmp.set('second','sammy');\r\nfor(let [key,value] of mp){\r\n\tconsole.log(key,value);\r\n\t//console.log(mp.get(key));\r\n}\r\nconsole.log(\"-----------只遍历key------------\");\r\nfor(let [key] of mp){\r\n\tconsole.log(key);\r\n}\r\nconsole.log(\"-----------只遍历value------------\");\r\nfor(let [,value] of mp){\r\n\tconsole.log(value);\r\n}\r\n\r\n\r\n// 用途七：输入模块的指定方法\r\n// 加载模块时，往往需要指定输入那些方法。解构赋值使得输入语句非常清晰。\r\nconst { SourceMapConsumer, SourceNode } = require(\"source-map\");\r\n\r\n\r\n"]}